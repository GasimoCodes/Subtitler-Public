{
  "api/Gasimo.Subtitles.MonoSingleton-1.html": {
    "href": "api/Gasimo.Subtitles.MonoSingleton-1.html",
    "title": "Class MonoSingleton<T> | Subtitler",
    "keywords": "Class MonoSingleton<T> Helper class to implement Singleton pattern into Subtitler Inheritance object Object Component Behaviour MonoBehaviour MonoSingleton<T> Subtitler Namespace: Gasimo.Subtitles Assembly: Gasimo.Subtitler.dll Syntax public abstract class MonoSingleton<T> : MonoBehaviour where T : Component Type Parameters Name Description T Properties | Edit this page View Source Instance Gets the instance. Declaration public static T Instance { get; } Property Value Type Description T The instance. Methods | Edit this page View Source Awake() Use this for initialization. Declaration protected virtual void Awake()"
  },
  "api/Gasimo.Subtitles.ScriptableEvent.ScriptableEventHandler.html": {
    "href": "api/Gasimo.Subtitles.ScriptableEvent.ScriptableEventHandler.html",
    "title": "Delegate ScriptableEvent.ScriptableEventHandler | Subtitler",
    "keywords": "Delegate ScriptableEvent.ScriptableEventHandler Namespace: Gasimo.Subtitles Assembly: Gasimo.Subtitler.dll Syntax public delegate void ScriptableEvent.ScriptableEventHandler()"
  },
  "api/Gasimo.Subtitles.ScriptableEvent.html": {
    "href": "api/Gasimo.Subtitles.ScriptableEvent.html",
    "title": "Class ScriptableEvent | Subtitler",
    "keywords": "Class ScriptableEvent Object which you can bind custom events to. Use it by creating an ScriptableObject for every instance of events you want to use. To subscribe, use onEventRaised. To raise, use Raise(). Subtitles automatically calls Raise() when you attach instance of this class to a Subtitle line. Inheritance object Object ScriptableObject ScriptableEvent Namespace: Gasimo.Subtitles Assembly: Gasimo.Subtitler.dll Syntax [CreateAssetMenu(fileName = \"ScriptableEvent\", menuName = \"Gasimo/ScriptableEvent\")] [Serializable] public class ScriptableEvent : ScriptableObject Methods | Edit this page View Source Raise() Invokes events subscribed to onEventRaised. Declaration public void Raise() Events | Edit this page View Source onEventRaised Declaration public event ScriptableEvent.ScriptableEventHandler onEventRaised Event Type Type Description ScriptableEvent.ScriptableEventHandler"
  },
  "api/Gasimo.Subtitles.SubtitleContainer.html": {
    "href": "api/Gasimo.Subtitles.SubtitleContainer.html",
    "title": "Class SubtitleContainer | Subtitler",
    "keywords": "Class SubtitleContainer Component representing one subtitle source in the world. Inheritance object Object Component Behaviour MonoBehaviour SubtitleContainer Namespace: Gasimo.Subtitles Assembly: Gasimo.Subtitler.dll Syntax [RequireComponent(typeof(AudioSource))] public class SubtitleContainer : MonoBehaviour Fields | Edit this page View Source autoPlay Play automatically on awake? Declaration public bool autoPlay Field Value Type Description bool | Edit this page View Source subtitleData Subtitle Data to play Declaration public SubtitleSequenceData subtitleData Field Value Type Description SubtitleSequenceData Methods | Edit this page View Source Play() Plays the attached Subtitle Data Declaration public void Play()"
  },
  "api/Gasimo.Subtitles.SubtitleDataEntry.html": {
    "href": "api/Gasimo.Subtitles.SubtitleDataEntry.html",
    "title": "Class SubtitleDataEntry | Subtitler",
    "keywords": "Class SubtitleDataEntry Contains data for 1 line of dialogue. Inheritance object SubtitleDataEntry Namespace: Gasimo.Subtitles Assembly: Gasimo.Subtitler.dll Syntax [Serializable] public class SubtitleDataEntry Fields | Edit this page View Source audio AudioClip which will play simultaneously with the subtitle line. Can be left empty to not play sound. Declaration public AudioClip audio Field Value Type Description AudioClip | Edit this page View Source dialogue Written Closed-Captions Declaration public string dialogue Field Value Type Description string | Edit this page View Source displayFor How long will this subtitle be displayed for. Declaration public float displayFor Field Value Type Description float | Edit this page View Source end Declaration [HideInInspector] public float end Field Value Type Description float | Edit this page View Source speaker Display name of speaker/object which plays the dialogue. Leave empty for none (useful for sounds). Declaration [SerializeField] public string speaker Field Value Type Description string | Edit this page View Source start Declaration [HideInInspector] public float start Field Value Type Description float | Edit this page View Source subtitleEvent Programmable event which gets ivoked when this subtitle gets played. Useful to trigger mechanics exactly when player hears a certain line. Declaration public ScriptableEvent subtitleEvent Field Value Type Description ScriptableEvent | Edit this page View Source waitFor Delay between last Subtitle line and this one. Leave 0 to play at same time as previous line. Declaration public float waitFor Field Value Type Description float"
  },
  "api/Gasimo.Subtitles.SubtitleSequenceData.html": {
    "href": "api/Gasimo.Subtitles.SubtitleSequenceData.html",
    "title": "Class SubtitleSequenceData | Subtitler",
    "keywords": "Class SubtitleSequenceData Contains data holding a single Closed Caption sequence. For individual lines, see SubtitleDataEntry. Inheritance object Object ScriptableObject SubtitleSequenceData Namespace: Gasimo.Subtitles Assembly: Gasimo.Subtitler.dll Syntax [CreateAssetMenu(fileName = \"SubtitleFile\", menuName = \"Gasimo/SubtitleFile\")] [Serializable] public class SubtitleSequenceData : ScriptableObject Fields | Edit this page View Source Subtitles Sequence of Subtitles Declaration [SerializeField] public SubtitleDataEntry[] Subtitles Field Value Type Description SubtitleDataEntry[]"
  },
  "api/Gasimo.Subtitles.Subtitler.html": {
    "href": "api/Gasimo.Subtitles.Subtitler.html",
    "title": "Class Subtitler | Subtitler",
    "keywords": "Class Subtitler Subtitler Manager. Contains all display logic and cc functions. Inheritance object Object Component Behaviour MonoBehaviour MonoSingleton<Subtitler> Subtitler Inherited Members MonoSingleton<Subtitler>.Instance Namespace: Gasimo.Subtitles Assembly: Gasimo.Subtitler.dll Syntax public class Subtitler : MonoSingleton<Subtitler> Fields | Edit this page View Source centeredText Centers text. Text is aligned left by default. Declaration public bool centeredText Field Value Type Description bool | Edit this page View Source displayPanel UI Panel GameObject where Subtitles will spawn Declaration public Transform displayPanel Field Value Type Description Transform | Edit this page View Source enableBackgroundPanel Should background panel be visible? Declaration public bool enableBackgroundPanel Field Value Type Description bool | Edit this page View Source player Target audioListener, used for audio occlusion calculation. Declaration public AudioListener player Field Value Type Description AudioListener | Edit this page View Source speakerHighlight Default Speaker Color Declaration public Color speakerHighlight Field Value Type Description Color | Edit this page View Source subtitlePool Pool of TextMeshProUGUI Instances. Initializes automatically. Declaration public ObjectPool<TextMeshProUGUI> subtitlePool Field Value Type Description ObjectPool<TextMeshProUGUI> | Edit this page View Source subtitlePoolSize Declaration [HideInInspector] public int subtitlePoolSize Field Value Type Description int | Edit this page View Source subtitleSize Size of subtitle text. Default is 24. Declaration public int subtitleSize Field Value Type Description int Methods | Edit this page View Source Awake() Use this for initialization. Declaration protected override void Awake() Overrides MonoSingleton<Subtitler>.Awake() | Edit this page View Source CheckHideSubtitlePanel() Checks whether the Subtitle Panel shouldnt be hidden. Hides it if no subtitles are currently on display. Declaration public void CheckHideSubtitlePanel() | Edit this page View Source Init() Used internaly to force init before awake Declaration public void Init() | Edit this page View Source PlaySubtitleEntry(SubtitleDataEntry, AudioSource) Plays a given subtitle entry Declaration public void PlaySubtitleEntry(SubtitleDataEntry sD, AudioSource aS) Parameters Type Name Description SubtitleDataEntry sD Subtitle Data file AudioSource aS AudioSource to playOneShot through | Edit this page View Source PlaySubtitleSequence(SubtitleSequenceData, AudioSource) Plays a given subtitle track Declaration public int PlaySubtitleSequence(SubtitleSequenceData sD, AudioSource aS) Parameters Type Name Description SubtitleSequenceData sD Subtitle Data file AudioSource aS AudioSource to playOneShot through Returns Type Description int Cancellation ID of the subtitle instance | Edit this page View Source killSubtitleById(int) Immediately kills an active subtitle loop based on ID Declaration public void killSubtitleById(int id) Parameters Type Name Description int id Subtitle Session ID to be killed"
  },
  "api/Gasimo.Subtitles.Timeline.SubtitlerPlayableAsset.html": {
    "href": "api/Gasimo.Subtitles.Timeline.SubtitlerPlayableAsset.html",
    "title": "Class SubtitlerPlayableAsset | Subtitler",
    "keywords": "Class SubtitlerPlayableAsset a clip instance containing one SubtitleDataEntry on the Timeline Inheritance object Object ScriptableObject PlayableAsset SubtitlerPlayableAsset Namespace: Gasimo.Subtitles.Timeline Assembly: Gasimo.Subtitler.Timeline.dll Syntax public class SubtitlerPlayableAsset : PlayableAsset Fields | Edit this page View Source entry Declaration public SubtitleDataEntry entry Field Value Type Description SubtitleDataEntry Methods | Edit this page View Source CreatePlayable(PlayableGraph, GameObject) Implement this method to have your asset inject playables into the given graph. Declaration public override Playable CreatePlayable(PlayableGraph graph, GameObject owner) Parameters Type Name Description PlayableGraph graph The graph to inject playables into. GameObject owner The game object which initiated the build. Returns Type Description Playable The playable injected into the graph, or the root playable if multiple playables are injected. Overrides UnityEngine.Playables.PlayableAsset.CreatePlayable(UnityEngine.Playables.PlayableGraph, UnityEngine.GameObject)"
  },
  "api/Gasimo.Subtitles.Timeline.SubtitlerPlayableBehaviour.html": {
    "href": "api/Gasimo.Subtitles.Timeline.SubtitlerPlayableBehaviour.html",
    "title": "Class SubtitlerPlayableBehaviour | Subtitler",
    "keywords": "Class SubtitlerPlayableBehaviour Behaviour called by clips. This plays a single SubtitleDataEntry at the beginning of the clip. Inheritance object PlayableBehaviour SubtitlerPlayableBehaviour Namespace: Gasimo.Subtitles.Timeline Assembly: Gasimo.Subtitler.Timeline.dll Syntax public class SubtitlerPlayableBehaviour : PlayableBehaviour Fields | Edit this page View Source entry Declaration public SubtitleDataEntry entry Field Value Type Description SubtitleDataEntry Methods | Edit this page View Source OnBehaviourPause(Playable, FrameData) This method is invoked when one of the following situations occurs: <br><br> The effective play state during traversal is changed to Playables.PlayState.Paused. This state is indicated by FrameData.effectivePlayState.<br><br> The PlayableGraph is stopped while the playable play state is Playing. This state is indicated by PlayableGraph.IsPlaying returning true. Declaration public override void OnBehaviourPause(Playable playable, FrameData info) Parameters Type Name Description Playable playable The Playable that owns the current PlayableBehaviour. FrameData info A FrameData structure that contains information about the current frame context. Overrides UnityEngine.Playables.PlayableBehaviour.OnBehaviourPause(UnityEngine.Playables.Playable, UnityEngine.Playables.FrameData) | Edit this page View Source OnBehaviourPlay(Playable, FrameData) This function is called when the Playable play state is changed to Playables.PlayState.Playing. Declaration public override void OnBehaviourPlay(Playable playable, FrameData info) Parameters Type Name Description Playable playable The Playable that owns the current PlayableBehaviour. FrameData info A FrameData structure that contains information about the current frame context. Overrides UnityEngine.Playables.PlayableBehaviour.OnBehaviourPlay(UnityEngine.Playables.Playable, UnityEngine.Playables.FrameData)"
  },
  "api/Gasimo.Subtitles.Timeline.SubtitlerPlayableClipEditor.html": {
    "href": "api/Gasimo.Subtitles.Timeline.SubtitlerPlayableClipEditor.html",
    "title": "Class SubtitlerPlayableClipEditor | Subtitler",
    "keywords": "Class SubtitlerPlayableClipEditor Custom Editor for the Timeline clip. Takes care of replacing the clip name and assigning duration property. Inheritance object ClipEditor SubtitlerPlayableClipEditor Namespace: Gasimo.Subtitles.Timeline Assembly: Gasimo.Subtitler.Timeline.dll Syntax [CustomTimelineEditor(typeof(SubtitlerPlayableAsset))] public class SubtitlerPlayableClipEditor : ClipEditor Methods | Edit this page View Source OnClipChanged(TimelineClip) Declaration public override void OnClipChanged(TimelineClip clip) Parameters Type Name Description TimelineClip clip Overrides UnityEditor.Timeline.ClipEditor.OnClipChanged(UnityEngine.Timeline.TimelineClip)"
  },
  "api/Gasimo.Subtitles.Timeline.SubtitlerTrack.html": {
    "href": "api/Gasimo.Subtitles.Timeline.SubtitlerTrack.html",
    "title": "Class SubtitlerTrack | Subtitler",
    "keywords": "Class SubtitlerTrack Controls creating a track in Timeline Inheritance object Object ScriptableObject PlayableAsset TrackAsset SubtitlerTrack Namespace: Gasimo.Subtitles.Timeline Assembly: Gasimo.Subtitler.Timeline.dll Syntax [TrackColor(0.945, 0.349, 0.165)] [TrackClipType(typeof(SubtitlerPlayableAsset))] [TrackBindingType(typeof(AudioSource))] public class SubtitlerTrack : TrackAsset Methods | Edit this page View Source CreateTrackMixer(PlayableGraph, GameObject, int) Declaration public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount) Parameters Type Name Description PlayableGraph graph GameObject go int inputCount Returns Type Description Playable Overrides TrackAsset.CreateTrackMixer(PlayableGraph, GameObject, int)"
  },
  "api/Gasimo.Subtitles.Timeline.SubtitlerTrackEditor.html": {
    "href": "api/Gasimo.Subtitles.Timeline.SubtitlerTrackEditor.html",
    "title": "Class SubtitlerTrackEditor | Subtitler",
    "keywords": "Class SubtitlerTrackEditor Custom editor for the track. Will be used for custom icon once I find the docs on hows the proper way to implement this. Inheritance object TrackEditor SubtitlerTrackEditor Namespace: Gasimo.Subtitles.Timeline Assembly: Gasimo.Subtitler.Timeline.dll Syntax [CustomTimelineEditor(typeof(SubtitlerTrack))] public class SubtitlerTrackEditor : TrackEditor Fields | Edit this page View Source icon Declaration public static Sprite icon Field Value Type Description Sprite Methods | Edit this page View Source GetTrackOptions(TrackAsset, Object) Declaration public override TrackDrawOptions GetTrackOptions(TrackAsset track, Object binding) Parameters Type Name Description TrackAsset track Object binding Returns Type Description TrackDrawOptions Overrides UnityEditor.Timeline.TrackEditor.GetTrackOptions(UnityEngine.Timeline.TrackAsset, UnityEngine.Object)"
  },
  "api/Gasimo.Subtitles.Timeline.SubtitlerTrackMixer.html": {
    "href": "api/Gasimo.Subtitles.Timeline.SubtitlerTrackMixer.html",
    "title": "Class SubtitlerTrackMixer | Subtitler",
    "keywords": "Class SubtitlerTrackMixer Currently unused. Will be possibly used to manage clips on the timeline. Inheritance object PlayableBehaviour SubtitlerTrackMixer Namespace: Gasimo.Subtitles.Timeline Assembly: Gasimo.Subtitler.Timeline.dll Syntax public class SubtitlerTrackMixer : PlayableBehaviour"
  },
  "api/Gasimo.Subtitles.Timeline.html": {
    "href": "api/Gasimo.Subtitles.Timeline.html",
    "title": "Namespace Gasimo.Subtitles.Timeline | Subtitler",
    "keywords": "Namespace Gasimo.Subtitles.Timeline Classes SubtitlerPlayableAsset a clip instance containing one SubtitleDataEntry on the Timeline SubtitlerPlayableBehaviour Behaviour called by clips. This plays a single SubtitleDataEntry at the beginning of the clip. SubtitlerPlayableClipEditor Custom Editor for the Timeline clip. Takes care of replacing the clip name and assigning duration property. SubtitlerTrack Controls creating a track in Timeline SubtitlerTrackEditor Custom editor for the track. Will be used for custom icon once I find the docs on hows the proper way to implement this. SubtitlerTrackMixer Currently unused. Will be possibly used to manage clips on the timeline."
  },
  "api/Gasimo.Subtitles.html": {
    "href": "api/Gasimo.Subtitles.html",
    "title": "Namespace Gasimo.Subtitles | Subtitler",
    "keywords": "Namespace Gasimo.Subtitles Classes MonoSingleton<T> Helper class to implement Singleton pattern into Subtitler ScriptableEvent Object which you can bind custom events to. Use it by creating an ScriptableObject for every instance of events you want to use. To subscribe, use onEventRaised. To raise, use Raise(). Subtitles automatically calls Raise() when you attach instance of this class to a Subtitle line. SubtitleContainer Component representing one subtitle source in the world. SubtitleDataEntry Contains data for 1 line of dialogue. SubtitleSequenceData Contains data holding a single Closed Caption sequence. For individual lines, see SubtitleDataEntry. Subtitler Subtitler Manager. Contains all display logic and cc functions. Delegates ScriptableEvent.ScriptableEventHandler"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to Subtitler docs! | Subtitler",
    "keywords": "Welcome to Subtitler docs! Subtitler is a simple to use Subtitling/Closed-Captions solution for Unity3D. Its currently under active development but is completely usable. Report all bugs or feature requests here. Features Cull subtitles based on Player Distance / Audio Volume Define dialogue entries with variable timing offsets and display lengths Assign AudioClip to each dialogue entry, or use one big clip for whole dialogue instead (useful with videos or heavily processed sounds which cant be split by lines) Rich Text Support UI Options (Alignment, background panel visibility, Font size) Trigger events (ScriptableEvent) when a certain line gets played Fancy Editor Subtitle Authoring tool (>=2023.3, fallbacks to normal Inspector) API to hook your custom subtitles scripts or logic API to stop currently playing subtitles using their runtime ID Timeline Integration Planned Features Optional Localization Package Support Optional Addressables for audioClips support Possible FMod Integration"
  },
  "manual/containers.html": {
    "href": "manual/containers.html",
    "title": "Subtitle Containers | Subtitler",
    "keywords": "Subtitle Containers These are world objects, which contain data about what subtitles to play. They do not contain playing logic. Example implementation of this is available through the SubtitleContainer component. SubtitleContainer Component This object either calls Subtitler to play its SubtitleSequence on Start() or, if you choose, manually through SubtitleContainer.Play();. Setting up Range-Limiting and Occlusion SubtitleContainer Subtitler allows you to cull subtitles automatically if they become hard to hear. Culling does not mean subtitles will not be 'played', they will just not be displayed on the UI. This is done by checking the AudioSource associated with the SubtitleContainer. A list of properties evaulated is as follows: AudioSource Description Spatial Blend Value of 1 forces range-limiting. Max Distance If player distance exceeds max distance (and 3D Mix is set to 1), the subtitle entry will not be visible. Volume If the volume is currently low, the entry will not be displayed. Enabled If the AudioSource is not enabled, the entry will not be shown."
  },
  "manual/data.html": {
    "href": "manual/data.html",
    "title": "Data | Subtitler",
    "keywords": "Data Data of subtitler is represented either as a standalone entry or a sequence of entries. Subtitler Entry This struct represents a single line of Closed-Captions. It contains information on timing (when to play the subtitle relative to previous, if any), events (things which you want triggered upon playing this line of the Subtitle, like Achievments or an NPC becoming hostile) and the speaker who spoke the line (if any). Subtitler Sequence Sequences are ScriptableObjects and are the recommended way to create subtitles. Under the hood, it contains a list of SubtitlerEntries which are played top-to-bottom. Parameter Description Speaker Name of the entity which speaks, displayed highlighted on closed-captions. Leave empty to omit. Dialogue Closed Caption text content. Be it dialogue or sounds. Start Delay after which this entry will be displayed, relative to Start of last Subtitle Entry. End How long will this Subtitle be displayed for? Audio If included, Subtitler will play an AudioClip with this Entry. (For this to work, a reference to an AudioSource must be passed along as an argument. Refer to containers or API reference for more info.) Event An event to be played when this Subtitle is displayed. See Events"
  },
  "manual/event.html": {
    "href": "manual/event.html",
    "title": "Events | Subtitler",
    "keywords": "Events Subtitler allows you to subscribe simple C# events to subtitle entries. These events are fired when the corresponding entry is displayed. ScriptableEvent A ScriptableObject file. Can be created using the Gasimo/ScriptableEvent context menu. You can subscribe to the ScriptableEvent by calling onEventRaised += (your_action);"
  },
  "manual/gettingstarted.html": {
    "href": "manual/gettingstarted.html",
    "title": "Welcome to Subtitler docs! | Subtitler",
    "keywords": "Welcome to Subtitler docs! Subtitler is a simple to use Subtitling/Closed-Captions solution for Unity3D. Its currently under active development but is completely usable. Report all bugs or feature requests here. Quick Start: Recommended Unity version (as of now) is 2023.3 due to a bug in UIToolkit, which is yet to be backported. Minimum supported version is 2022, but it doesnt feature custom editor for easier subtitle editing. UPM: 2022.2 and above Import Cysharp UniTask by adding https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask into Package Manager (Package Manager/+/Install package from GIT URL) Import Subtitler https://github.com/GasimoCodes/Subtitler.git?path=com.gasimo.subtitler into Package Manager To see samples, open Package Manager, navigate to Subtitler. Press Samples and select import. Sample will automatically import into Assets/Samples/Subtitler"
  },
  "manual/subtitler.html": {
    "href": "manual/subtitler.html",
    "title": "Subtitler Prefab | Subtitler",
    "keywords": "Subtitler Prefab In order to use Subtitler, you need to drag the Subtitler Prefab from the package into the scene. Alternatively, you can copy the prefab from the provided Samples. The Subtitler component exposes some commonly changed properties such as font-size, background visibility and text alignment. Changing Visuals Subtitler exposes some commonly changed properties like font-size, text alignment (centered/left-aligned) and speaker highlight color. Subtitler does not render on top of my UI when I dont want it to and vice-versa Change Subtitler's UIDocument Sort Order Change Font To be exposed in future update Advanced: I wish to change the UI in depth / integrate Subtitler into my own UIToolkit document If you wish to modify any visual property, you will need to copy the whole Subtitler VisualTreeAsset and USS styling sheets into your own UIToolkit document. When modifying, make sure to include the same classes and overriden values as the original document to gurantee proper layouting. This mostly means margins, transitions and MaxHeight properties, which are used by Subtitler extensively. Keep on mind that all children of Subtitler VisualElement are cleared and that Labels are created and initialized at runtime, not copied from any Labels currently under the Subtitler VisualElement."
  },
  "manual/subtitler_components.html": {
    "href": "manual/subtitler_components.html",
    "title": "Components | Subtitler",
    "keywords": "Components The subtitling system is divided into three major components: Subtitler This is the brains of the subtitling empire. All subtitling UI and playing logic runs through this component. If you wish to use your own underlying system for playing Subtitles, reference this using the singleton Subtitler.Instance();. SubtitleContainers This is a component representing a single Subtitle source in the world. It does not contain any logic, only a reference an Subtitle Sequence/Entry. Data This is a data file containing a single sequence of closed-captions. If you have 2023.3 or newer, a fancy custom editor table is exposed for you to use while editing them."
  },
  "manual/timeline_intro.html": {
    "href": "manual/timeline_intro.html",
    "title": "Timeline | Subtitler",
    "keywords": "Timeline Timeline is Unity's sequencing tool to handle complex event playback including Audio, Animations, C# Events and custom tracks. Subtitler comes with an optional Timeline integration allowing you to embed subtitles into your Timeline tracks. (The integration will enable itself automatically using scripting symbols). Importing Timeline If you do not have Unity Timeline in your project, import it using Unity Package Manager by navigating into Unity Registry/Timeline and press import."
  },
  "manual/timeline_use.html": {
    "href": "manual/timeline_use.html",
    "title": "Subtitler Track | Subtitler",
    "keywords": "Subtitler Track Think of a Subtitler track like a Subtitler Sequence left to right. You can create an Subtitler under +/Gasimo.Subtitler.Timeline/Subtitler Track. Subtitler Entry (Clip) You can add entries on the timeline by right clicking anywhere on the Subtitler Track and selecting 'Add Subtitler Playable Asset'. Timing Subtitler Entry timing works a little differently on the Timeline compared to Subtitle Sequences. Timing is loaded automatically from the Clip timing (An entry gets triggered at the exact time its played by the Timeline and lasts depending on the length of the clip). Changing the WaitFor property of the Entry will result in the Entry having a delay and be out of sync with the Timeline."
  }
}