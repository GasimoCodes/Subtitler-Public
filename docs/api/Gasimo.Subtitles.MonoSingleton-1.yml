### YamlMime:ManagedReference
items:
- uid: Gasimo.Subtitles.MonoSingleton`1
  commentId: T:Gasimo.Subtitles.MonoSingleton`1
  id: MonoSingleton`1
  parent: Gasimo.Subtitles
  children:
  - Gasimo.Subtitles.MonoSingleton`1.Awake
  - Gasimo.Subtitles.MonoSingleton`1.Instance
  langs:
  - csharp
  - vb
  name: MonoSingleton<T>
  nameWithType: MonoSingleton<T>
  fullName: Gasimo.Subtitles.MonoSingleton<T>
  type: Class
  source:
    remote:
      path: com.gasimo.subtitler/Runtime/Scripts/Misc/MonoSingleton.cs
      branch: main
      repo: https://github.com/GasimoCodes/Subtitler.git
    id: MonoSingleton
    path: ../com.gasimo.subtitler/Runtime/Scripts/Misc/MonoSingleton.cs
    startLine: 10
  assemblies:
  - Gasimo.Subtitler
  namespace: Gasimo.Subtitles
  summary: Helper class to implement Singleton pattern into Subtitler
  example: []
  syntax:
    content: 'public abstract class MonoSingleton<T> : MonoBehaviour where T : Component'
    typeParameters:
    - id: T
      description: ''
    content.vb: Public MustInherit Class MonoSingleton(Of T As Component) Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - Gasimo.Subtitles.Subtitler
  nameWithType.vb: MonoSingleton(Of T)
  fullName.vb: Gasimo.Subtitles.MonoSingleton(Of T)
  name.vb: MonoSingleton(Of T)
- uid: Gasimo.Subtitles.MonoSingleton`1.Instance
  commentId: P:Gasimo.Subtitles.MonoSingleton`1.Instance
  id: Instance
  parent: Gasimo.Subtitles.MonoSingleton`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: MonoSingleton<T>.Instance
  fullName: Gasimo.Subtitles.MonoSingleton<T>.Instance
  type: Property
  source:
    remote:
      path: com.gasimo.subtitler/Runtime/Scripts/Misc/MonoSingleton.cs
      branch: main
      repo: https://github.com/GasimoCodes/Subtitler.git
    id: Instance
    path: ../com.gasimo.subtitler/Runtime/Scripts/Misc/MonoSingleton.cs
    startLine: 28
  assemblies:
  - Gasimo.Subtitler
  namespace: Gasimo.Subtitles
  summary: Gets the instance.
  example: []
  syntax:
    content: public static T Instance { get; }
    parameters: []
    return:
      type: '{T}'
      description: The instance.
    content.vb: Public Shared ReadOnly Property Instance As T
  overload: Gasimo.Subtitles.MonoSingleton`1.Instance*
  nameWithType.vb: MonoSingleton(Of T).Instance
  fullName.vb: Gasimo.Subtitles.MonoSingleton(Of T).Instance
- uid: Gasimo.Subtitles.MonoSingleton`1.Awake
  commentId: M:Gasimo.Subtitles.MonoSingleton`1.Awake
  id: Awake
  parent: Gasimo.Subtitles.MonoSingleton`1
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: MonoSingleton<T>.Awake()
  fullName: Gasimo.Subtitles.MonoSingleton<T>.Awake()
  type: Method
  source:
    remote:
      path: com.gasimo.subtitler/Runtime/Scripts/Misc/MonoSingleton.cs
      branch: main
      repo: https://github.com/GasimoCodes/Subtitler.git
    id: Awake
    path: ../com.gasimo.subtitler/Runtime/Scripts/Misc/MonoSingleton.cs
    startLine: 52
  assemblies:
  - Gasimo.Subtitler
  namespace: Gasimo.Subtitles
  summary: Use this for initialization.
  example: []
  syntax:
    content: protected virtual void Awake()
    content.vb: Protected Overridable Sub Awake()
  overload: Gasimo.Subtitles.MonoSingleton`1.Awake*
  nameWithType.vb: MonoSingleton(Of T).Awake()
  fullName.vb: Gasimo.Subtitles.MonoSingleton(Of T).Awake()
references:
- uid: Gasimo.Subtitles
  commentId: N:Gasimo.Subtitles
  href: Gasimo.html
  name: Gasimo.Subtitles
  nameWithType: Gasimo.Subtitles
  fullName: Gasimo.Subtitles
  spec.csharp:
  - uid: Gasimo
    name: Gasimo
    href: Gasimo.html
  - name: .
  - uid: Gasimo.Subtitles
    name: Subtitles
    href: Gasimo.Subtitles.html
  spec.vb:
  - uid: Gasimo
    name: Gasimo
    href: Gasimo.html
  - name: .
  - uid: Gasimo.Subtitles
    name: Subtitles
    href: Gasimo.Subtitles.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Gasimo.Subtitles.MonoSingleton`1.Instance*
  commentId: Overload:Gasimo.Subtitles.MonoSingleton`1.Instance
  href: Gasimo.Subtitles.MonoSingleton-1.html#Gasimo_Subtitles_MonoSingleton_1_Instance
  name: Instance
  nameWithType: MonoSingleton<T>.Instance
  fullName: Gasimo.Subtitles.MonoSingleton<T>.Instance
  nameWithType.vb: MonoSingleton(Of T).Instance
  fullName.vb: Gasimo.Subtitles.MonoSingleton(Of T).Instance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  commentId: '!:T'
  name: T
  nameWithType: T
  fullName: T
- uid: Gasimo.Subtitles.MonoSingleton`1.Awake*
  commentId: Overload:Gasimo.Subtitles.MonoSingleton`1.Awake
  href: Gasimo.Subtitles.MonoSingleton-1.html#Gasimo_Subtitles_MonoSingleton_1_Awake
  name: Awake
  nameWithType: MonoSingleton<T>.Awake
  fullName: Gasimo.Subtitles.MonoSingleton<T>.Awake
  nameWithType.vb: MonoSingleton(Of T).Awake
  fullName.vb: Gasimo.Subtitles.MonoSingleton(Of T).Awake
